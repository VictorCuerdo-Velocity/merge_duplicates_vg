name: Deploy Report to Vercel

on:
  push:
    branches:
      - v.5.0

  workflow_dispatch:
    inputs:
      preview_mode:
        description: 'Run in preview mode'
        required: true
        type: boolean
        default: true
      filter_email:
        description: 'Optional email filter for merges'
        required: false
        type: string
        default: ''

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate HTML Report
        run: |
          # Construct the command
          CMD="python devrev_merge.py --csv contacts.csv"

          # If user selected preview mode OR this is a push event
          if [[ "${{ github.event.inputs.preview_mode }}" == "true" || "${{ github.event_name }}" == "push" ]]; then
            echo "Running in preview mode..."
            CMD="$CMD --preview"
          else
            echo "Running in production mode..."
          fi

          # If user specified a filter_email
          if [[ -n "${{ github.event.inputs.filter_email }}" ]]; then
            echo "Detected filter_email: '${{ github.event.inputs.filter_email }}'"
            CMD="$CMD --filter-email \"${{ github.event.inputs.filter_email }}\""
          fi

          echo "Final command: $CMD"
          eval "$CMD"

      - name: Set latest report as index.html
        run: |
          if [ -d "reports" ]; then
            echo "=== All HTML files in reports directory ==="
            ls -l reports/merge_report_*.html || echo "No merge_report_*.html files found"

            echo "=== Sorting by filename and picking the last ==="
            latest=$(ls -1 reports/merge_report_*.html 2>/dev/null | sort | tail -n 1)
            echo "DEBUG: The newest file by name is => $latest"

            if [ -n "$latest" ]; then
              cp "$latest" reports/index.html
              echo "Copied $latest => reports/index.html"
            else
              echo "No report files found!"
              exit 1
            fi
          else
            echo "Reports directory not found!"
            exit 1
          fi

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          zeit-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./reports
          vercel-args: '--prod --force'
